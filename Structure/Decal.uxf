<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>525</y>
      <w>336</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>DynamicDecal
--
- key:String
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape,option:Char): Image

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>343</x>
      <y>616</y>
      <w>217</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>ImageDecal
--
- image: Image
--
+ load(Path path): Image
+ getDecalRenderer():ImageRenderingVisiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>616</y>
      <w>196</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Text
--
- text: String
- color: Color
- font:Font
--
+ setText (newText String): void
+ getDecalRenderer():TextRenderingVisiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>217</y>
      <w>350</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/Decal/
--

--
/+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape,option:char): Image/
+ acceptBuilder(v ScriptObjectBuilder): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>791</x>
      <y>182</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>434</x>
      <y>154</y>
      <w>203</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>Note on ScriptObejct
--
The UML for the ScriptObject is defined on the other file.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>154</y>
      <w>56</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>420</x>
      <y>210</y>
      <w>217</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Note on the implementation of acceptBuilder
--
/* some code */
void acceptBuilder (ScriptObjectBuilder v){
	       v.addDecal( this );
}
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>245</y>
      <w>56</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>378</x>
      <y>693</y>
      <w>217</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>ColorDecal
--
- color : Color
--
+ getDecalRenderer():ColorRenderingVisiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1071</x>
      <y>511</y>
      <w>301</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/LayeringDecalDecorator/
--
- maskDecal : Decal
- contentDecal : Decal
- pos : PositionScaled 
--
/+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image/
+ setContents(a:Decal,b:Decal,pos:PositionScaled)


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>812</x>
      <y>280</y>
      <w>63</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;320.0;70.0;320.0;70.0;350.0;70.0;320.0;10.0;320.0;70.0;320.0;70.0;350.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>154</y>
      <w>231</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>{Abstract}
/ScriptObject/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>147</y>
      <w>252</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ShapeVisiter

group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>833</x>
      <y>602</y>
      <w>203</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>Note on dynamic decal render
Overrides Decal render
--
Find the decal in the family.
Then forward the render to that decal, and return result.
If no decal matching key, return an error image.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>924</x>
      <y>581</y>
      <w>21</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>224</y>
      <w>252</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>{abstract}
DecalRenderingVisiter
--
- color : Color
- families : ArrayList&lt;Family&gt;
- size : Size
- option : char
--
+ getColor() : Color
+ getSize() : Size
+ getFamilies() : ArrayList&lt;Family&gt;
+ setFamilies(f:ArrayList&lt;Family&gt;
+ setSize(s:Size)
+ setColor(c:Color)
+ setOption(option:char)
/+ getImage() : Image/


group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>511</x>
      <y>308</y>
      <w>280</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Note on the implementation of render
--
/* Something along these lines */
DecalRenderingVisiter v
= new this.getDecalRenderer()
v.setColor(c);
v.setShape(s);
v.setSize(size);
v.setFamilies(families)
s.accept(v);
return v.getImage();
--
The visiter knows how to render it's decal, for each shape.
The image decal will put the image in the shape, the text will 
fit the text inside the shape with appropriate line wraps, and 
ColoredDecal will return an image of the shape, in that color. 

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>378</y>
      <w>252</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>TextRenderingVisiter
--
- text : String
- font : Font
--
+ visitRectangle(r:Rectangle) : void
+ visitTriangle(t:Triangle) : void
+ visitCircle(c:Circle) : void
+ visitAnyShape(a:AnyShape) : void
+ getImage() : Image


group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>497</y>
      <w>252</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>ImageRenderingVisiter
--
- imageToRender:Image
--
+ visitRectangle(r:Rectangle) : void
+ visitTriangle(t:Triangle) : void
+ visitCircle(c:Circle) : void
+ visitAnyShape(a:AnyShape) : void
+ getImage() : Image


group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>595</y>
      <w>252</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>ColorRenderingVisiter
--

--
+ visitRectangle(r:Rectangle) : void
+ visitTriangle(t:Triangle) : void
+ visitCircle(c:Circle) : void
+ visitAnyShape(a:AnyShape) : void
+ getImage() : Image


group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>616</x>
      <y>707</y>
      <w>273</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Note on getDecalRenderer
--
This is a factory method.
Return the correct visiter for the decal, with the visiter given
any references it might need.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>161</x>
      <y>168</y>
      <w>34</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
group=1</panel_attributes>
    <additional_attributes>21;21;21;56</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>7</x>
      <y>217</y>
      <w>76</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
group=1</panel_attributes>
    <additional_attributes>63;21;21;21</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>7</x>
      <y>217</y>
      <w>34</w>
      <h>398</h>
    </coordinates>
    <panel_attributes>lt=-
group=1</panel_attributes>
    <additional_attributes>21;21;21;385</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>7</x>
      <y>581</y>
      <w>76</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=-
group=1</panel_attributes>
    <additional_attributes>63;21;21;21</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>7</x>
      <y>483</y>
      <w>76</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=-
group=1</panel_attributes>
    <additional_attributes>63;21;21;21</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>7</x>
      <y>364</y>
      <w>76</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=-
group=1</panel_attributes>
    <additional_attributes>63;21;21;21</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1071</x>
      <y>406</y>
      <w>350</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>CropDecalDecorator
--
- toBeCropped : Decal
- pos : PositionScaled 
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape,option:char): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1071</x>
      <y>308</y>
      <w>343</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>CornerRoundingDecalDecorator
--
- decal : Decal
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape,option:char): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1071</x>
      <y>203</y>
      <w>343</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>RotateDecalDecorator
--
- decal : Decal
- angle : double

--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape,option:char): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1134</x>
      <y>119</y>
      <w>203</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>These all override render to call the held decals render, and then
apply a transformation to returned image.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1057</x>
      <y>623</y>
      <w>301</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>MaskDecalDecorator
--
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1085</x>
      <y>700</y>
      <w>301</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>
InvetedMaskDecalDecorator
--
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1211</x>
      <y>595</y>
      <w>175</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;70.0;40.0;70.0;20.0;230.0;20.0;230.0;120.0;10.0;120.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>343</x>
      <y>525</y>
      <w>350</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/DecalWithFM/
--

--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape,option:char): Image
/# getDecalRenderer():DecalRenderingVisiter/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>280</y>
      <w>329</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>450.0;10.0;450.0;320.0;10.0;320.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>966</x>
      <y>483</y>
      <w>119</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>833</x>
      <y>301</y>
      <w>203</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>
--
Anything not transparent on maskDecal will be replaced 
with the corresponding location from contentDecal.
Google textmask for some good examples.
Takes in a positionScaled to determine how to map
mask pixels -&gt; content pixels.

The shape will just be passed through to decals held, so 
no visiter is needed, the shape of the decal references will always 
be the same, so the process is shape agnostic. 
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1015</x>
      <y>203</y>
      <w>70</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;50.0;40.0;50.0;300.0;80.0;300.0;50.0;300.0;50.0;460.0;80.0;460.0;50.0;460.0;50.0;160.0;80.0;160.0;50.0;160.0;50.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>938</x>
      <y>168</y>
      <w>518</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0;720.0;10.0;720.0;210.0;680.0;210.0;720.0;210.0;720.0;350.0;690.0;350.0;720.0;350.0;720.0;500.0;620.0;500.0;720.0;500.0;720.0;10.0;410.0;10.0;410.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>588</y>
      <w>231</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;120.0;30.0;310.0;30.0;310.0;40.0;310.0;30.0;10.0;30.0;10.0;40.0;10.0;30.0;130.0;30.0;130.0;150.0</additional_attributes>
  </element>
</diagram>
