<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>890</y>
      <w>480</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>DynamicDecal
--
- key:String
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1680</x>
      <y>910</y>
      <w>490</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>ImageDecal
--
- image: Image
--
+ load(Path path): Image
+ getDecalRenderer():ImageRenderingVisiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>890</y>
      <w>380</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Text
--
- text: String
- color: Color
- font:Font
--

+ setText (newText String): void
+ getDecalRenderer():TextRenderingVisiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>840</y>
      <w>590</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;50.0;130.0;10.0;570.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1500</x>
      <y>670</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/Decal/
--

--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image
+ acceptBuilder(v ScriptObjectBuilder): void
/+ getDecalRenderer():DecalRenderingVisiter/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>770</y>
      <w>350</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>330.0;10.0;330.0;80.0;140.0;80.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1670</x>
      <y>840</y>
      <w>740</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>720.0;50.0;680.0;10.0;10.0;10.0;270.0;10.0;210.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1670</x>
      <y>550</y>
      <w>30</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1090</x>
      <y>510</y>
      <w>290</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Note on ScriptObejct
--
The UML for the ScriptObject is defined on the other file.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1370</x>
      <y>510</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1010</x>
      <y>710</y>
      <w>390</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Note on the implementation of acceptBuilder
--
/* some code */
void acceptBuilder (ScriptObjectBuilder v){
	       v.addDecal( this );
}
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1390</x>
      <y>760</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>910</y>
      <w>480</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ColorDecal
--
- color : Color
--
+ getDecalRenderer():ColorRenderingVisiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2030</x>
      <y>700</y>
      <w>430</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>MaskDecalDecorator
--
- maskDecal : Decal
- contentDecal : Decal
- pos : PositionScaled 
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1860</x>
      <y>300</y>
      <w>660</w>
      <h>530</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;370;30;30;640;30;640;510;600;510</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1920</x>
      <y>700</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2070</x>
      <y>380</y>
      <w>290</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>
--
Anything not transparent on maskDecal will be replaced 
with the corresponding location from contentDecal.
Google textmask for some good examples.
Takes in a positionScaled to determine how to map
mask pixels -&gt; content pixels.

The shape will just be passed through to decals held, so 
no visiter is needed, the shape of the decal references will always 
be the same, so the process is shape agnostic. 
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2170</x>
      <y>640</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1500</x>
      <y>510</y>
      <w>330</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>{Abstract}
/ScriptObject/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>510</y>
      <w>360</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ShapeVisiter
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2080</x>
      <y>1040</y>
      <w>290</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Note on dynamic decal render
Overrides Decal render
--
Find the decal in the family.
Then forward the render to that decal, and return result.
If no decal matching key, return an error image.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2270</x>
      <y>970</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>620</y>
      <w>360</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>{abstract}
DecalRenderingVisiter
--
- color : Color
- families : ArrayList&lt;Family&gt;
- size : Size
--
+ getColor() : Color
+ getSize() : Size
+ getFamilies() : ArrayList&lt;Family&gt;
+ setFamilies(f:ArrayList&lt;Family&gt;
+ setSize(s:Size)
+ setColor(c:Color)
/+ getImage() : Image/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>650</x>
      <y>440</y>
      <w>390</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>Note on the implementation of render
--
/* Something along these lines */
DecalRenderingVisiter v
= new this.getDecalRenderer()
v.setColor(c);
v.setShape(s);
v.setSize(size);
v.setFamilies(families)
s.accept(v);
return v.getImage();
--
The visiter knows how to render it's decal, for each shape.
The image decal will put the image in the shape, the text will 
fit the text inside the shape with appropriate line wraps, and 
ColoredDecal will return an image of the shape, in that color. 

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>860</y>
      <w>360</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>TextRenderingVisiter
--
- text : String
- font : Font
--
+ visitRectangle(r:Rectangle) : void
+ visitTriangle(t:Triangle) : void
+ visitCircle(c:Circle) : void
+ visitAnyShape(a:AnyShape) : void
+ getImage() : Image

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>1050</y>
      <w>360</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>ImageRenderingVisiter
--
- imageToRender:Image
--
+ visitRectangle(r:Rectangle) : void
+ visitTriangle(t:Triangle) : void
+ visitCircle(c:Circle) : void
+ visitAnyShape(a:AnyShape) : void
+ getImage() : Image

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>1220</y>
      <w>360</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>ColorRenderingVisiter
--

--
+ visitRectangle(r:Rectangle) : void
+ visitTriangle(t:Triangle) : void
+ visitCircle(c:Circle) : void
+ visitAnyShape(a:AnyShape) : void
+ getImage() : Image

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1010</x>
      <y>640</y>
      <w>510</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;490;30</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1180</x>
      <y>1130</y>
      <w>390</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Note on getDecalRenderer
--
This is a factory method.
Return the correct visiter for the decal, with the visiter given
any references it might need.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1050</x>
      <y>1010</y>
      <w>160</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;140;120</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1300</x>
      <y>970</y>
      <w>140</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120;30;30;160</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1400</x>
      <y>980</y>
      <w>350</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>330;30;30;150</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>360</x>
      <y>540</y>
      <w>50</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;80</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>0</x>
      <y>710</y>
      <w>200</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180;30;30;30</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>0</x>
      <y>710</y>
      <w>50</w>
      <h>630</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>30;30;30;610</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>0</x>
      <y>1290</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>160;30;30;30</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>0</x>
      <y>1090</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>160;30;30;30</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>0</x>
      <y>900</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>160;30;30;30</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1420</x>
      <y>300</y>
      <w>430</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>CropDecalDecorator
--
- toBeCropped : Decal
- pos : PositionScaled 
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1420</x>
      <y>160</y>
      <w>430</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>CornerRoundingDecalDecorator
--
- decal : Decal
--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1910</x>
      <y>160</y>
      <w>430</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>RotateDecalDecorator
--
- decal : Decal
- angle : double

--
+ render(families ArrayList&lt;Families&gt;, size Size,s:Shape): Image


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1050</x>
      <y>150</y>
      <w>290</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>These all override render to call the held decals render, and then
apply a transformation to returned image.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>180</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>180</y>
      <w>110</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1330</x>
      <y>90</y>
      <w>630</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;540.0;10.0;610.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1860</x>
      <y>270</y>
      <w>30</w>
      <h>420</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;400.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1840</x>
      <y>200</y>
      <w>50</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>30.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1860</x>
      <y>210</y>
      <w>70</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;70.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1810</x>
      <y>270</y>
      <w>80</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1850</x>
      <y>250</y>
      <w>140</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;420;30;60;120;30</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1760</x>
      <y>390</y>
      <w>160</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>140;280;140;30;30;30</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>1350</x>
      <y>250</y>
      <w>170</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150;420;30;190;70;30</additional_attributes>
  </element>
</diagram>
