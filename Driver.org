#+BEGIN_SRC java
  /**
     class Image {
      
     }

     class VectorImage extends Image {
     }
     class BitMapImage extends Image {
     }

     abstract class DecalRenderingStrategy {
     abstract Image renderImage(filePath);
     abstract Image renderText(String,font,size);
     abstract Image shapeImage(shapeStuff);
     }

     class PNGDecalRenderingStrategy extends DecalRenderingStrategy {

     }

     class VectorDecalRenderingStrategy extends DecalRenderingStrategy {

     }

  ,**/

  class RenderedCard {
      private Image front;
      private Image back;
      private String name;
  }

  class ErrorMessage {
      String message;
      File occuredIn;
      int line;
      int col;
      int code;
  }

  class Logger {
      void addError(ErrorMessage s);
      void addWarning(ErrorMessage s);

      ArrayList<ErrorMessage> getWarnings();
      ArrayList<ErrorMessage> getErrors();

      private Logger() {};

      public Logger getInstance();

  }

  void exitIfErrors(Options options) {
      Logger logger = Logger.getInstance();
      if ( hasErrors() ) {
          //Print erors
      }
      //Print to file with the options
      System.exit(errorCode);
  }



  void main() {
      Options options = new OptionsParser(defaultOptionsFilePath);
      exitIfErors(options);

      ScriptEvaluator evaluator = new ScriptEvaluator();

      evaluator.evalFile(options.scriptFile());
      exitIfErors(options);



      ArrayList<RenderedCard> cards = evaluator.getCardsThatWereRendered();

      Output output = new Output(options);
      for ( RenderedCard c : cards ) {
          output.addCard(c);
      }

      output.writeFiletoDisk();
      //Print warnings from Logger

  }


#+END_SRC

#+BEGIN_SRC plantuml :file DriverUML.png
skinparam dpi 300

class Logger
Logger : adddError(ErrorMessage s)
Logger : addWarning(ErrorMessage s)
Logger : getWarnings():ArrayList<ErrorMessage>
Logger : getErrors():ArrayList<ErrorMessage>

note bottom : Is a singleton


class ErrorMessage
ErrorMessage : message : String
ErrorMessage : occuredIn : Path
ErrorMessage : line:Int
ErrorMessage : col:Int
ErrorMessage : code:Int

Logger o--> ErrorMessage 

class Option
Option : ScriptFile() : Path
Option : OutFormat() : Enum
Option : OutputFile() : Path
Option : LogFile() : Path

class Output
Output : List<RenderedCards>
Output : outputPath : Path
Output : format : OutputFormat
Output : addCard(c:Card)
Output : writeFiletoDisk() 
Output : Output(o:Option)
note bottom : This creates one file with all the cards in it, and converts the lossless PNG Images to the output format. 


enum OutputFormat {
  JPG
  JPG2000
  JPGX
  PNG
  PDF
  GIF
  BMP
}

class Driver
Driver : public static void main(String[] args)

Output --> OutputFormat

Driver --> Output
Driver --> ScriptEvaluator
Driver --> Options
Driver --> Logger
Driver --> RenderedCard
  



#+END_SRC
