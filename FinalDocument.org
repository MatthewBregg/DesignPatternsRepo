* Overall System, How all these sub systems interact

* Layout System  (Ervis)
** for each class
*** Purpose
*** What patterns it partakes in
** Design Patterns used
*** Why we used?
*** What we gained?
*** Consequences


* Decal System  (Ervis)
** for each class
*** Purpose
*** What patterns it partakes in
** Design Patterns used
*** Why we used?
*** What we gained?
*** Consequences

* Driver System (Includes Logger, output, options)
** Options Reading system
*** for each class
**** Purpose
**** What patterns it partakes in
*** Design Patterns used
**** Why we used?
**** What we gained?
**** Consequences
** for each class
*** Purpose
*** What patterns it partakes in
** Design Patterns used
*** Why we used?
*** What we gained?
*** Consequences

** Logging system
*** for each class
**** Purpose
**** What patterns it partakes in
*** Design Patterns used
**** Why we used?
**** What we gained?
**** Consequences


* ScriptEvaluator (Matt) (This includes all the builders, and the Lexer
** for each class
*** Purpose
*** What patterns it partakes in
** Builder
*** Why we used?
*** What we gained?
*** Consequences
** Visitor
*** Why we used?
*** What we gained?
*** Consequences
** State
*** Why we used?
*** What we gained?
*** Consequences
** Adapter (String/Int wrappers are tailored object adapters I think)
*** Why we used?
*** What we gained?
*** Consequences

** Facade (The script evaluator, might want to make something a bit higher even?)
*** Why we used?
*** What we gained?
*** Consequences

** Lexer
*** for each class
**** Purpose
**** What patterns it partakes in
*** Design Patterns used
**** Why we used?
**** What we gained?
**** Consequences
** Builder System
*** for each class
**** Purpose
**** What patterns it partakes in
*** Design Patterns used
**** Why we used?
**** What we gained?
**** Consequences


