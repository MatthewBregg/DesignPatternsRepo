<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>776</x>
      <y>152</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>{abstract}
/ScriptObjectBuilder/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>224</y>
      <w>216</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>SizeBuilder
--
state:State
--
addScriptObject(s:ScriptObject)
getResult() : ScriptObject
clone() : SizeBuilder
addDouble(s:DoubleScriptWrapper)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>176</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1000</x>
      <y>192</y>
      <w>256</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>a size builder is a structure containing either a single number representing the length and width where length==width OR a tuple containing the width and height.
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>312</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>352</y>
      <w>264</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>/State/
--
getResult(): ScriptObject
addScriptObject(s:ScriptObject, c:SizeBuilder)
addDouble(s:DoubleScriptWrapper)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1048</x>
      <y>536</y>
      <w>272</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>ErrorState
--
--
getResult(c:SizeBuilder): ScriptObject</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>424</y>
      <w>240</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;280.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1208</x>
      <y>464</y>
      <w>296</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>We have not received either a single number or two numbers. Thus, an error state is set and will polymorphically deploy to the caller.
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>712</x>
      <y>528</y>
      <w>272</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>OneState
--
width: DoubleScriptWrapper
--
OneState(one:ScriptObject)
getResult(c:SizeBuilder):ScriptObject
addDouble(s:DoubleScriptWrapper)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1048</x>
      <y>600</y>
      <w>248</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>getResult: returns an ErrorScriptObject
addScriptObject: does nothing
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>712</x>
      <y>616</y>
      <w>288</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>getResult: returns a SizeSingle with a single value where width==height
addDouble: set state of c to new TwoState (note: we need to check if there is another state)
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>424</y>
      <w>24</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>616</x>
      <y>464</y>
      <w>232</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>We have received a single input and we interpret that as a single value where width == height, but we still want to check if there is another state!
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>536</y>
      <w>288</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>TwoState
--
height: DoubleScriptWrapper
--
TwoState(width:ScriptObject, height:ScriptObject)
getResult(c:SizeBuilder):ScriptObject
addDouble(s:DoubleScriptWrapper)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>488</x>
      <y>424</y>
      <w>328</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>390.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>368</x>
      <y>640</y>
      <w>288</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>getResult: if there was another state, then we return TwoState. Else, we return OneState. Thus, TwoState needs to know about OneState!
addDouble: set state of c to new ErrorState
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>320</x>
      <y>480</y>
      <w>224</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>We have received two script objects as input and we will coorespond those with the width and height
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>48</x>
      <y>536</y>
      <w>264</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Empty
--
--
getResult(c:SizeBuilder)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>480</y>
      <w>224</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>We have received two script objects as input and we will coorespond those with the width and height
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>424</y>
      <w>600</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>730.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>608</y>
      <w>304</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>getResult: returns an ErrorSCriptObject and set the state of c to new ErrorState
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>576</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>584</x>
      <y>248</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Has the form
(size a b)
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
