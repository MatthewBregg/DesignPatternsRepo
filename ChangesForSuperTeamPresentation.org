* Shape is no longer a decal type, with implementors for each shape.

* Layouts have a shape
** DONE Need to update layout builder
** DONE - uses a list
** DONE Need to update ScriptSpecification
** DONE Need to update ShapeBuilder :
** DONE Need to update Decal with more vistiers
** DONE add color decal builder.
** DONE Need to update DecalBuilders/add decorators
** DONE Need to add DecalDecorator builders.
*** DONE update token example with making a layout and co in the builderconstruction
*** DONE RotateDecalDecorator
*** DONE CropDecalDecorator
*** DONE CornerRoundingDecalDecorator
*** DONE MaskDecalDecorator


** DONE update script specification
** DONE Split up BuilderConstruction.org

** DONE make every builder inherit from the ScriptObject builder, then remove them from main uml.
** TODO Some of the state inner classes only have A circle, but not abstract tag. Might be worth fixing.


* Builder loader
Can add more a new builder at runtime.
- How are the normal builders added?
  - ATM : Hard coded into the driver
  - Should we change this?
  - One idea : XML file of name, path pairs, read that file and load it. 
  - Maybe the builders should just be added from the script evaluator?
  - Right now we only have no idea of families of builders.
    - If that changed, abstract factory might be apropriate?
    - Maybe the builder factory itself should?
    - Let the builder factory have a static method that returns all "predefined" builders?
